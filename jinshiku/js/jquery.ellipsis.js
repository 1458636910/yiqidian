!function (t) { t.fn.ellipsis = function (l) { return l = t.extend({ row: 1, onlyFullWords: !1, char: "...", callback: function () { }, position: "tail" }, l), this.each(function () { var a = t(this), i = a.text(), e = i, c = e.length, o = a.height(); a.text("a"); var h = parseFloat(a.css("lineHeight"), 10), r = a.height(), s = (h > r ? h - r : 0) * (l.row - 1) + r * l.row; if (o <= s) return a.text(i), void l.callback.call(this); var n = 1, f = 0, u = i.length; if ("tail" === l.position) { for (; n < u; ) f = Math.ceil((n + u) / 2), a.text(i.slice(0, f) + l.char), a.height() <= s ? n = f : u = f - 1; i = i.slice(0, n), l.onlyFullWords && (i = i.replace(/[\u00AD\w\uac00-\ud7af]+$/, "")), i += l.char } else if ("middle" === l.position) { for (var d = 0; n < u; ) f = Math.ceil((n + u) / 2), d = Math.max(c - f, 0), a.text(e.slice(0, Math.floor((c - d) / 2)) + l.char + e.slice(Math.floor((c + d) / 2), c)), a.height() <= s ? n = f : u = f - 1; d = Math.max(c - n, 0); var x = e.slice(0, Math.floor((c - d) / 2)), M = e.slice(Math.floor((c + d) / 2), c); l.onlyFullWords && (x = x.replace(/[\u00AD\w\uac00-\ud7af]+$/, "")), i = x + l.char + M } a.text(i), l.callback.call(this) }), this } } (jQuery);